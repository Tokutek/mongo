// generated with buildscripts/find_commands.py, which is expensive and generates a few false positives.
// re-run this periodically to check for new commands
var commands = [
    '$eval',
    '_changeOplogVersion',
    '_changePartitionCreateTime',
    '_collectionsExist',
    '_hashBSONElement',
    '_isSelf',
    '_migrateClone',
    '_migrateStartCloneTransaction',
    '_recvChunkAbort',
    '_recvChunkCommit',
    '_recvChunkStart',
    '_recvChunkStatus',
    '_skewClockCommand',
    '_testDistLockWithSkew',
    '_testDistLockWithSyncCluster',
    '_testHooks',
    '_transferMods',
    'abortLoad',
    'abortTransaction',
    'addPartition',
    'addShard',
    'applyOps',
    'authenticate',
    'availableQueryOptions',
    'availablequeryoptions',
    // enterprise only
    //'backupStart',
    //'backupStatus',
    //'backupThrottle',
    'beginLoad',
    'beginTransaction',
    'buildInfo',
    'buildinfo',
    'checkShardingIndex',
    'checkpoint',
    'clean',
    'clone',
    'cloneCollection',
    'cloneCollectionAsCapped',
    'closeAllDatabases',
    'collMod',
    'collStats',
    'collstats',
    'commitLoad',
    'commitTransaction',
    'compact',
    'configureFailPoint',
    'connPoolStats',
    'connPoolSync',
    'connectionStatus',
    'connpoolsync',
    'convertToCapped',
    'convertToPartitioned',
    'copydb',
    'copydbgetnonce',
    'count',
    'create',
    'cursorInfo',
    'dataSize',
    'datasize',
    'dbHash',
    'dbStats',
    'dbhash',
    'dbstats',
    'deleteIndexes',
    'diagLogging',
    'distinct',
    'driverOIDTest',
    'drop',
    'dropDatabase',
    'dropIndexes',
    'dropPartition',
    'emptycapped',
    'enableSharding',
    'engineStatus',
    'eval',
    'features',
    'filemd5',
    'findAndModify',
    'findandmodify',
    'flushRouterConfig',
    'forceerror',
    'fsync',
    'geoNear',
    'getCmdLineOpts',
    'getLastError',
    'getLog',
    'getParameter',
    'getPartitionInfo',
    'getPrevError',
    'getShardMap',
    'getShardVersion',
    'getlasterror',
    'getnonce',
    'getoptime',
    'getpreverror',
    'godinsert',
    'group',
    'handshake',
    'hostInfo',
    'isMaster',
    'isdbgrid',
    'ismaster',
    'journalLatencyTest',
    'listCommands',
    'listDatabases',
    'listPlugins',
    'listShards',
    'listdatabases',
    'loadPlugin',
    'logReplInfo',
    'logRotate',
    'logout',
    'mapReduce',
    'mapreduce',
    'mapreduce.shardedfinish',
    'medianKey',
    'moveChunk',
    'movePrimary',
    'netstat',
    'ping',
    'profile',
    'reIndex',
    'removeShard',
    'renameCollection',
    'repairDatabase',
    'replAddPartition',
    'replGetExpireOplog',
    'replSetElect',
    'replSetExpireOplog',
    'replSetFreeze',
    'replSetFresh',
    'replSetGetRBID',
    'replSetGetStatus',
    'replSetHeartbeat',
    'replSetInitiate',
    'replSetMaintenance',
    'replSetReconfig',
    'replSetStepDown',
    'replSetSyncFrom',
    'replSetTest',
    'replTrimOplog',
    'replUndoOplogEntry',
    'resetError',
    'reseterror',
    'rollbackTransaction',
    // mutex name
    //'rsreconfig',
    'serverStatus',
    'setParameter',
    'setShardVersion',
    'shardCollection',
    'shardConnPoolStats',
    'shardingState',
    'showLiveTransactions',
    'showPendingLockRequests',
    'shutdown',
    'sleep',
    'split',
    'splitChunk',
    'splitVector',
    'top',
    'touch',
    'unloadPlugin',
    'unsetSharding',
    'updateSlave',
    'validate',
    'whatsmyuri',
    'writeBacksQueued',
    'writebacklisten',
];

var st = new ShardingTest("test_all_commands", 1, 3, 1);

var dbAdmin = st.d0.getDB('admin');
var shAdmin = st.s.getDB('admin');

for (var i = 0; i < commands.length; ++i) {
    var cmdobj = {};
    cmdobj[commands[i]] = 1;
    cmdobj.help = true;
    var dbOk = dbAdmin.runCommand(cmdobj).ok;
    var shOk = shAdmin.runCommand(cmdobj).ok;
    if (!dbOk) { print('Command ' + commands[i] + ' not present in mongod.'); }
    if (!shOk) { print('Command ' + commands[i] + ' not present in mongos.'); }
    assert(dbOk || shOk, 'Command ' + commands[i] + ' not found anywhere!');
}

st.stop();
